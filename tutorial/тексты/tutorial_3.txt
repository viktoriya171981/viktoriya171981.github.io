Знакомство с CSS 

Мы узнаем, что такое:
CSS, селекторы, блоки объявления, внешние и внутренние стили
Форматирование текста: шрифты, курсив и полужирный шрифт

CSS -Cascading Style Sheets или Каскадные Таблицы Стилей. Обычно CSS называют просто «стили».
CSS  - это язык для управления внешним видом HTML-документа.

Определение стиля состоит из двух элементов: 
это сам элемент веб-страницы, который непосредственно подлежит форматированию браузером, - селектор, 
а также форматирующие команды – блок объявления. 

Простейший тип селекторов — селекторы по имени тега: p, h1 и так далее. 
Когда браузер видит такой селектор, он применяет стили из правила ко всем подходящим тегам. 
Например, ко всем абзацам или ко всем заголовкам первого уровня.
Блоки объявления могут, например, окрасить текст в синий цвет, добавить красную рамку (границу) вокруг абзаца, установить фотографию в центре страницы и другое.
Пример 
р {color: red; font-size: 1.5em;}
или более красиво оформленный код:
р {
  color: red;
  font-size: 1.5em;
}
Этот текст говорит браузеру «Сделай текст всех абзацев веб-страницы, помеченных тегом <p>, красным и установи размер шрифта 1.5em.»
 
Весь набор определяемых стилей включается в таблицу стилей. 
Таблицы стилей бывают двух видов – внутренние (непосредственно в самой веб-странице) и внешние (в отдельном файле, связанном с веб-страницей).
Преимущества внешних стилей:
Вся информация о стилях в едином файле.
Можно присоединить одну и ту же внешнюю таблицу стилей к каждой странице сайта, создавая, таким образом, единый дизайн.
При обновлении сайта (например, нужно изменить представление заголовков первого уровня), 
используя внутренние таблицы стилей, пришлось бы редактировать каждую страницу сайта. 
А так можно внести изменения в одном файле.

Связывание внешних таблиц стилей с HTML-кодом
1 способ - добавляем внутрь тега head
<link rel=”stylesheet” href=”css/styles.css”>
rel=”stylesheet” – указывает тип ссылка, в данном случае это ссылка на таблицу стилей.
href – задает местонахождение внешнего CSS-файла на сайте.

2 способ – с использованием CSS
<style>
	@import url(«css/styles.css»)
</style>
Правило @import – языковая конструкция CSS.
После правила @import можно добавлять обычные стили, которые нужно применить только к одной веб-странице.
Например: 
<style type="text/css">
  @import url(css/styles.css);
  @import url(css/forms.css);
  p { color:red; }
</style>
type="text/css" – нужен для более ранних версий HTML, в HTML5 можно не писать.
Правила @import пишут перед остальными стилями, иначе браузер проигнорирует стили styles.css и forms.css.
Внутренняя таблица стилей находится между открывающим и закрывающим тегами <style> и </style> HTML-кода, 
в  теле тега head веб-страницы, обычно прямо перед закрывающим тегом </head>. 
Если вы также используете код JavaScript, добавляйте его после таблиц стилей, т.к. часто программы на JavaScript полагаются на CSS. 
Пример:
...
  <style>
    h1 {
      color: #FF7643;
      font-family: Arial;
    }
    p {
      color: red;
      font-size: 1.5em;
    }
  </style>
</head>
<body>

Есть еще встроенные стили (inline) – когда мы непосредственно в HTML-коде дописываем к тегу атрибут style. 
Например: 
<p style="color: red; font-size: 1.5em;">...</p>

Форматирование текста: шрифты, курсив и полужирный шрифт

Шрифты, веб-шрифты и директива @font-face
Свойство font-family – указывает шрифт. 
Работает, только, если у посетителей сайтов имеется такой же шрифт, установленный на их компьютерах. 
Поэтому лучше выбирать проверенные шрифты из основного набора, установленного на большинстве компьютеров. 
В последнее время веб-браузеры стали поддерживать веб-шрифты, которые браузер сам загружает и использует при просмотре сайта. 
Веб шрифты требуют дополнительную CSS-команду, которая называется директивой @font-face. 
Директива @font-face отвечает за сообщение веб-браузеру имени шрифта и места, откуда его нужно загрузить.
Указывать можно несколько шрифтов. 
Браузер проходит по списку слева направо и использует первый найденный в системе шрифт. 
Если название шрифта состоит из нескольких слов, то используют кавычки.
Пример:
P { 
  font-family: “Times New Roman”, Times, serif;
}
serif – целое семейство шрифтов, будет выбран шрифт из семейства, если два предыдущие не установлены на компьютере посетителя сайта.
Семейства шрифтов:
serif — шрифт с засечками;
sans-serif — шрифт без засечек.

Сайты, где вы можете найти бесплатные веб-шрифты 
The Open Font Library https://fontlibrary.org/
Google Fonts https://fonts.google.com/
Fontstorage https://fontstorage.com/ru/ - кроме шрифтов есть инструмент, который легко позволяет настроить внешний вид текста и получить код CSS: 
Font Squirrel  https://www.fontsquirrel.com/ - кроме шрифтов предлагает средство, для конвертирования шрифта в другие форматы шрифтов.

Большинство сайтов, предлагающие бесплатные шрифты, предоставляют шрифт в единственном формате, 
и часто в форматах .ttf (True Type) .otf (Open Type), которые не поддерживаются некоторыми браузерами. 
Чтобы гарантировать предоставление шрифтов как можно большему количеству браузеров, 
нужно использовать шрифты форматов EOT, WOFF (Web Open Font Format), True Type и SVG. 
При использовании веб-шрифтов, чтобы получить полужирную версию шрифта, или курсивную, нужно ее скачать отдельно. 
Иначе браузер искусственно сделает шрифт полужирным или курсивом. В результате получается уродливае полужирное (курсивное) начертание.
Как это все сделать, мы рассмотрим в практических заданиях.
Более подробные объяснения можете найти в книге “CSS The Missing Manual” David Sawyer McFarland.

Курсив и полужирный шрифт
Свойство font-weight: толщина начертания. Основные значения bold и normal
Почитать можно здесь https://htmlacademy.ru/courses/43/run/3 и здесь http://htmlbook.ru/css/font-weight
Свойство font-style (http://htmlbook.ru/css/font-style): курсив. Его основные значения: normal — обычное начертание и italic — курсивное начертание.
Эти свойства имеет и другие значения, но их почти не используют.

Практика
Задание 1. Изменить шрифт для странички первого урока (ссылка). 
-Используйте внтуреннюю таблицу стилей и ссылку link на внешний файл веб-шрифта.
-Создайте отдельный файл внешних таблиц стилей и подключите его к вашей html-странице.
-Добавьте внешний веб-шрифт при помощи директивы @import.
-Загрузите веб-шрифт к себе на сайт, конвертируйте его в 4-ре самых распространенных формата и подключите к странице.

Откройте в Notepad++ (или любом другом редакторе) созданный в прошлый раз файл tutorial_1 или скачайте его по ссылке и сохраните себе на компьютер в папку tutorial вашего сайта.
Перейдите по ссылке https://fonts.google.com/ и выберите понравившийся шрифт, нажмите на плюсик рядом со шрифтом. 
Вы увидете, что он добавится в окошко Family Selected.
я выбрала шрифт Roboto, потому что у него есть версии курсивная и полужирная.
Открыв вкладку Family Selected и выбрав пункт меню customize вы можете добавить курсивную и полужирную версии (там есть и другие).
Потом вернемся в пункт меню embed и скопируем код для вставки шрифта на страницу:
<link href="https://fonts.googleapis.com/css?family=Roboto:400,400i,900,900i" rel="stylesheet">
Вставим этот код внутрь тега head в самый конец. 
Теперь применим стиль, для этого после вставленного кода наберем следующее: 
		<style>
			body {
				font-family: 'Roboto', sans-serif;
			}
		</style>
	</head>
Код font-family: 'Roboto', sans-serif; я скопировала в Google fonts во вкладке Family Selected, код для CSS.
Мы использовали внутреннюю таблицу стилей
Применим данный шрифт к селектору body в документе style.css. 
Если мы применим его к селектору body, то все остальные теги наследуют данный шрифт (абзацы, заголовки и другие).
О наследовании мы поговорим еще позже.
Запустите вашу страницу в браузере перед сохранением документа, и после, и сравните. 
Вы увидете, что шрифт действительно поменялся.

Cейчас создадим внешнюю таблицу стилей.
Создайте новый документ, выберите Синтаксисы CSS. 
Сохраните новый документ с именем style и расширением css в той же папке tutorial. 
Если вы выбрали Синтаксисы CSS, то расширение добавиться автоматически.
В файл копируем код стиля и сделаем его полужирным:
body {
	font-family: 'Roboto', sans-serif;
	font-weight: bold;
}
Удалим стили из HTML-документа и добавим ссылку на файл стилей:
<link href="style.css" rel="stylesheet">
Ссылку на шрифт тоже оставляем.
Сохраняем оба документа и смотрим на результат.

Стандартный  метод  <link> для вставки шрифтов  требует  добавления  своего  кода  к  каждой  странице  сайта. 
 А  используя  директиву  @import,  можно  добавить  код  к  единственной  внешней  таблице  стилей .
Сейчас мы попробуем это на практике.
Копируйте адресс веб-шрифта из ссылки <link>, или на сайте Google Fonts выберите пункт меню @import и копируйте код.
Пишем в документе style.css в самом начале:
@import url('https://fonts.googleapis.com/css?family=Roboto:400,400i,900,900i');
url у нас тот же, что был и в href.
Теперь нам не нужно вставлять ссылку на шрифты в каждый HTML-документ. 
Удалим ее из документа tutorial_1.html. Ссылку на нашу таблицу стилей оставляем!
Сохраним оба файла и посмотрим на результат. Все получилось.

Теперь давайте скачаем веб-шрифт себе на сайт.
На вкладке Family Selected есть кнопка для скачивания. 
Создадим папку fonts в папке tutorial для шрифтов и скачаем туда выбранный шрифт. 
Распакуем архив.
Перейдем на сайт Font Squirrel  https://www.fontsquirrel.com/ пункт меню Generator -> Upload Fonts.
Выберем шрифт Roboto-Medium.ttf в папке fonts.
На сайте есть три режима конвертации шрифтов: basic, optimal, expert. 
Выберем expert и выберим все нужные форматы. 
В поле CSS Filename меняем имя, например, robotomediumstyle.css (там будет код для css).
Также я убираю значение в Font Name Suffix (чтобы к имени шрифта не прибавлялась надпись webfonts).
Ставлю галочку напротив Agreement и жму Download Your Kit. 
Сохраняю архив со шрифтами в папку fonts и распаковываю его.
В архиве есть файл robotomediumstyle.css.
Из него копирую код для css:
@font-face {
    
	font-family: 'Roboto';
    
	src: url('roboto-medium.eot');
    
	src: url('roboto-medium.eot?#iefix') format('embedded-opentype'),
         
	url('roboto-medium.woff2') format('woff2'),
         
	url('roboto-medium.woff') format('woff'),
         
	url('roboto-medium.ttf') format('truetype'),
         
	url('roboto-medium.svg#robotomedium') format('svg');
    
	font-weight: normal;
    
	font-style: normal;

}
В директиве @font-face мы задаем имя для шрифта, я его изменю с robotomedium  на Roboto.
И указаны ссылки для браузера, где именно лежат фалы шрифтов. 
Т.к. они у меня лежат в папке fonts, а папка лежит в той же папке, что и наш файл style.css, то надо исправить вездье путь к файлу.
И удалим теперь ненужную директиву @import.
Вот так теперь выглядят наши стили:

@font-face {
    
	font-family: 'Roboto';    
	src: url('fonts/roboto-medium.eot');    
	src: url('fonts/roboto-medium.eot?#iefix') format('embedded-opentype'),         
		url('fonts/roboto-medium.woff2') format('woff2'),         
		url('fonts/roboto-medium.woff') format('woff'),         
		url('fonts/roboto-medium.ttf') format('truetype'),         
		url('fonts/roboto-medium.svg#robotomedium') format('svg');    
	font-weight: normal;    
	font-style: normal;
}
body {
	font-family: 'Roboto', sans-serif;
}.
Сохранила и проверила, что все работает.

Теперь добавим полужирную и курсивную версию шрифта. 
Для этого проделаем теже действия для файлов шрифтов Roboto-Bold.ttf, Roboto-Italic.ttf и Roboto-BoldItalic.ttf.
Конвертируем в разные форматы шрифты при помощи сайта Font Squirrel  https://www.fontsquirrel.com/
Можно загрузить сразу несколько шрифтов для конвертации.
Подключим их к файлу css используя директивы @fstyont-face.
Код возьмем в файле .css из архива со шрифтами.
Отредактируем путь к файлам.
Имя оставим для шрифта то же Roboto.
Зададим соответсвующие значения для font-weight и font-style.
Вот мой файл со стилями:
@font-face {    
	font-family: 'Roboto';    
	src: url('fonts/roboto-medium.eot');    
	src: url('fonts/roboto-medium.eot?#iefix') format('embedded-opentype'),         
	url('fonts/roboto-medium.woff2') format('woff2'),         
	url('fonts/roboto-medium.woff') format('woff'),         
	url('fonts/roboto-medium.ttf') format('truetype'),         
	url('fonts/roboto-medium.svg#robotomedium') format('svg');    
	font-weight: normal;    
	font-style: normal;
}
@font-face {
    font-family: 'Roboto';
    src: url('fonts/roboto-bold.eot');
    src: url('fonts/roboto-bold.eot?#iefix') format('embedded-opentype'),
	url('fonts/roboto-bold.woff2') format('woff2'),
	url('fonts/roboto-bold.woff') format('woff'),
	url('fonts/roboto-bold.ttf') format('truetype'),
	url('fonts/roboto-bold.svg#robotobold') format('svg');
    font-weight: bold;
    font-style: normal;
}
@font-face {
    font-family: 'Roboto';
    src: url('fonts/roboto-bolditalic.eot');
    src: url('fonts/roboto-bolditalic.eot?#iefix') format('embedded-opentype'),
	url('fonts/roboto-bolditalic.woff2') format('woff2'),
	url('fonts/roboto-bolditalic.woff') format('woff'),
	url('fonts/roboto-bolditalic.ttf') format('truetype'),
	url('fonts/roboto-bolditalic.svg#robotobold_italic') format('svg');
    font-weight: bold;
    font-style: italic;	
}
@font-face {
    font-family: 'Roboto';
    src: url('fonts/roboto-italic.eot');
    src: url('fonts/roboto-italic.eot?#iefix') format('embedded-opentype'),
	url('fonts/roboto-italic.woff2') format('woff2'),
	url('fonts/roboto-italic.woff') format('woff'),
	url('fonts/roboto-italic.ttf') format('truetype'),
	url('fonts/roboto-italic.svg#robotoitalic') format('svg');
    font-weight: normal;
    font-style: italic;
}

body {
	font-family: 'Roboto', sans-serif;
}
h2 {
	font-style: italic;
	font-weight: bold;
}
h3 {
	font-weight: bold;
}
p {
	font-style: italic;
}





